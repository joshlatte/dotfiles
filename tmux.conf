set -g default-terminal "screen-256color"

unbind C-b
set -g prefix C-a

bind C-a send-prefix

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Highlight active window
set-window-option -g window-status-current-bg red

setw -g mode-keys vi

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 10

set -g history-limit 30000

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Mouse works as expected
set -g mouse on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on
# set -g mouse-select-window on

# Cycle panes with C-b C-b
unbind ^A
bind ^A select-pane -t :.+

# Reload config with a key
bind-key r source-file ~/.tmux.conf \; display "Config reloaded!"

# Copy paste mode more vim like
# More info at https://github.com/tmux/tmux/issues/754
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" #copy-selection

# Scrolling works as expected
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Use the system clipboard
# set-option -g default-command "reattach-to-user-namespace -l bash"

# Clear the pane and it's history
# bind C-l send-keys -R \; send-keys bind-key C-l \; clear-history
bind C-l send-keys C-l \; send-keys -R \; clear-history
# bind C-l send-keys "C-l"

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-left ""
set -g status-right "#[fg=green]#H"
